# .github/workflows/release.yml
name: Build and Release Vidoge

on:
  # Trigger the workflow when a tag with the 'v' prefix is pushed (e.g., v1.0.0)
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    # Use a Windows runner for a native build environment
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Use a stable Node.js version

      - name: Install dependencies
        # Use npm ci for a clean install
        run: npm ci

      - name: Download and Extract FFmpeg Binaries
        # This step fetches the archived FFmpeg binaries from your release asset
        run: |
          # 1. Define variables
          $DownloadURL = "https://github.com/Axarva/vidoge/releases/download/ffmpeg-binaries/ffmpeg-bundle.zip"
          $ZipFile = "ffmpeg-bundle.zip"
          $TargetDir = "vendor/ffmpeg"

          # 2. Create the target directory where the FFmpeg binaries are expected
          New-Item -ItemType Directory -Force -Path $TargetDir
          
          # 3. Download the zipped FFmpeg bundle
          Write-Host "Downloading FFmpeg bundle from $DownloadURL"
          Invoke-WebRequest -Uri $DownloadURL -OutFile $ZipFile
          
          # 4. Extract contents into the vendor/ffmpeg directory.
          # Since you zipped the contents of 'vendor/ffmpeg' (not the folder itself), 
          # we extract directly into the newly created 'vendor/ffmpeg' directory.
          Write-Host "Extracting FFmpeg bundle to $TargetDir"
          Expand-Archive -Path $ZipFile -DestinationPath $TargetDir -Force

        shell: pwsh # Use PowerShell (pwsh) for Windows runner commands

      - name: Run electron-builder for Windows and Publish
        # The `--publish always` flag creates the GitHub Release and uploads the artifacts.
        run: npm run dist -- --publish always
        env:
          # This token is automatically provided by GitHub and grants permission to publish the release.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
