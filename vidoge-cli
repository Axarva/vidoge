#!/usr/bin/env node
import fs from 'fs';
import { getOutputFile, fetchManifestUrl, downloadVideo } from './vidoge.js';


// ------------------- Utilities -------------------
function loadCookies() {
  if (fs.existsSync('cookies.json')) {
    return JSON.parse(fs.readFileSync('cookies.json', 'utf8'));
  } else if (fs.existsSync('cookies.txt')) {
    const lines = fs.readFileSync('cookies.txt', 'utf8').split('\n');
    const cookies = lines
      .filter(line => line && !line.startsWith('#'))
      .map(line => {
        const [domain, flag, path, secure, expiry, name, value] = line.split('\t');
        return {
          domain,
          path,
          name,
          value,
          httpOnly: false,
          secure: secure === 'TRUE',
          expires: Number(expiry) || undefined,
        };
      });
    fs.writeFileSync('cookies.json', JSON.stringify(cookies, null, 2));
    return cookies;
  } else {
    console.error('No cookies.json or cookies.txt found in the current directory.');
    process.exit(1);
  }
}

// ------------------- Main -------------------
(async function main() {
  const lectureUrl = process.argv[2];
  if (!lectureUrl) {
    console.error('Usage: vidoge-cli <lecture_url> [output_file.mp4]');
    process.exit(1);
  }

  const providedName = process.argv[3];
  const cookies = loadCookies();
  const outputFile = getOutputFile(lectureUrl, providedName);
  const manifestUrl = await fetchManifestUrl(lectureUrl, cookies);
  downloadVideo(manifestUrl, outputFile);
})();
